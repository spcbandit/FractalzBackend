// <auto-generated />
using System;
using Fractalz.Infrastructure.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fractalz.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20220824090539_CreateServerInfoTable")]
    partial class CreateServerInfoTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DialogUser", b =>
                {
                    b.Property<Guid>("DialogsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("char(36)");

                    b.HasKey("DialogsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("DialogUser");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.AdminSettings.AdminSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Host")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdminSettings");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Dialog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DateSend")
                        .HasColumnType("longtext");

                    b.Property<string>("LastMessage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Dialogs");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("ByteLength")
                        .HasColumnType("bigint");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("DialogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdSender")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOnRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsUpdate")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DialogId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Reaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmojiType")
                        .HasColumnType("int");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Profile.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AuthCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("IsEmailConfirmed")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("LogoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .HasColumnType("longtext");

                    b.Property<int>("OnlineStatus")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Patro")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("TimetableId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("VoiceRoomId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("LogoId");

                    b.HasIndex("TimetableId");

                    b.HasIndex("VoiceRoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Profile.UserLogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("ByteLength")
                        .HasColumnType("bigint");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<string>("Path")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserLogo");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Timetable.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsRepeat")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("TimetableId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TimetableId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Timetable.Timetable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Timetable");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Todo.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("About")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DurationInMinute")
                        .HasColumnType("int");

                    b.Property<string>("Header")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("TodoListId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Todo.TodoList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("TodoLists");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Voice.VoiceRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("VoiceServerId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("VoiceServerId");

                    b.ToTable("VoiceRoom");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Voice.VoiceServer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("VoiceServer");
                });

            modelBuilder.Entity("DialogUser", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Chat.Dialog", null)
                        .WithMany()
                        .HasForeignKey("DialogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fractalz.Application.Domains.Entities.Profile.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.File", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Chat.Message", null)
                        .WithMany("File")
                        .HasForeignKey("MessageId");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Message", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Chat.Dialog", null)
                        .WithMany("Messages")
                        .HasForeignKey("DialogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Reaction", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Chat.Message", null)
                        .WithMany("Reactions")
                        .HasForeignKey("MessageId");

                    b.HasOne("Fractalz.Application.Domains.Entities.Profile.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Profile.User", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Profile.UserLogo", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoId");

                    b.HasOne("Fractalz.Application.Domains.Entities.Timetable.Timetable", "Timetable")
                        .WithMany()
                        .HasForeignKey("TimetableId");

                    b.HasOne("Fractalz.Application.Domains.Entities.Voice.VoiceRoom", "VoiceRoom")
                        .WithMany("Users")
                        .HasForeignKey("VoiceRoomId");

                    b.Navigation("Logo");

                    b.Navigation("Timetable");

                    b.Navigation("VoiceRoom");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Timetable.Schedule", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Timetable.Timetable", null)
                        .WithMany("Schedules")
                        .HasForeignKey("TimetableId");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Todo.Task", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Todo.TodoList", "TodoList")
                        .WithMany("Tasks")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Todo.TodoList", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Profile.User", "User")
                        .WithOne("TodoList")
                        .HasForeignKey("Fractalz.Application.Domains.Entities.Todo.TodoList", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Voice.VoiceRoom", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Voice.VoiceServer", null)
                        .WithMany("Rooms")
                        .HasForeignKey("VoiceServerId");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Voice.VoiceServer", b =>
                {
                    b.HasOne("Fractalz.Application.Domains.Entities.Profile.User", null)
                        .WithMany("MyVoiceServer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Dialog", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Chat.Message", b =>
                {
                    b.Navigation("File");

                    b.Navigation("Reactions");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Profile.User", b =>
                {
                    b.Navigation("MyVoiceServer");

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Timetable.Timetable", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Todo.TodoList", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Voice.VoiceRoom", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Fractalz.Application.Domains.Entities.Voice.VoiceServer", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
